name: CI/CD

on:
  push:
    branches:
      - main
      
jobs:

  build:

  
    runs-on: ubuntu-latest

      
    steps:
    - uses: actions/checkout@v2 
    
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Code Scanning
      uses: github/codeql-action/analyze@v2
      with:
        languages: all # ou especifica as linguagens que deseja verificar

    ##- name: Upload report to GCS
      ##env:
        ##GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
      ##run: |
        ##echo "$GCLOUD_AUTH" | base64 --decode > gcloud_auth.json
        ##curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-XXX.0.0-linux-x86_64.tar.gz
        ##tar zxvf google-cloud-sdk-XXX.0.0-linux-x86_64.tar.gz
        ##./google-cloud-sdk/install.sh
        ##source google-cloud-sdk/path.bash.inc
        ##gcloud auth activate-service-account --key-file=gcloud_auth.json
        ##gsutil cp zap/zap_report.html gs://asecurityguru/

    - name: Run SAST  
      uses: anchore/scan-action@v3
      id: scan

    - name: Build and push image
      env:
        USERNAME: ${{ secrets.DOCKER_USERNAME }} 
        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      run: |
        docker build -t epma1985sp/nginx:latest .
        docker login -u $USERNAME -p $PASSWORD
        docker push epma1985sp/nginx:latest

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'epma1985sp/nginx:latest' # Substitua com o nome da imagem corretamente
        exit-code: '1' # Opção para falhar na construção se for encontrada uma vulnerabilidade


  ##deploy:
  
    ##needs: build
    
    ##runs-on: ubuntu-latest
    
    ##steps:
    ##- name: Trigger ArgoCD
      ##run: |  
        ##curl -XPOST -u admin:password https://argocd.example.com/api/webhook/nginx-app
